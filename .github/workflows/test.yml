name: test-integration
on: [push]
jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:10.18-jessie

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: user
          POSTGRES_HOST: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: db
          POSTGRES_PORT: 5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: use node v12
        uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: bagbyte/use-private-action@v0.0.2
              with:
                  private-action: 
                  private-action-token: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}
      - name: install
        run: npm ci
      - name: connect to database and start the server
        run: npm run build --if-present
        env:
          POSTGRES: postgres://user:postgres@postgres:5432/db
          POSTGRES_PORT: 5432
          POSTGRES_USER: user
          NODE_ENV: development
          PORT: 5000
          SECRET: HUBHUBHUB
          SECRETS: HUPHUTHYUTTYUN
          API: ee8ac2a6c5f422607e6561bcf7a29efe
      - name: start test
        run: npm run test
